{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "BackButton.svelte",
    "FutureDepatureListView.svelte",
    "PastDepatureListView.svelte",
    "PortMapView.svelte",
    "RouteSelector.svelte",
    "RouteViewer.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nimport RouteSelector from './RouteSelector.svelte';\nimport RouteViewer from './RouteViewer.svelte';\nimport BackButton from './BackButton.svelte';\nimport Communicator from './communicator';\nimport routePageParser from './routePageParser';\n;\nlet origin = {};\nlet destination = {};\nlet routesData = [];\nlet selectedRouteParser = {};\nconst objectIsEmpty = (obj) => {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nlet routeIsSelected = false;\nconst onBackButton = (_e) => {\n    if (routeIsSelected && selectedRouteParser) {\n        routeIsSelected = false;\n        selectedRouteParser = {};\n        destination = {};\n    }\n    if (origin) {\n        origin = {};\n    }\n};\n$: {\n    console.log('Either origin or destination changed...');\n    if (!objectIsEmpty(origin) && !objectIsEmpty(destination)) {\n        routeIsSelected = true;\n    }\n}\n$: {\n    console.log('App#Reacting  to something');\n    if (routeIsSelected) {\n        console.log('App#Reacting  routeIsSelected, get and parse route info...');\n        Communicator.getRouteInfo(`${origin['travelRouteName']}-${destination['travelRouteName']}/${origin['code']}-${destination['code']}`).then(response => {\n            console.log('App#Reacting  got the response, parse it');\n            selectedRouteParser = routePageParser(response);\n        });\n    }\n}\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    console.log(`App#onMount`);\n    if (routesData.length === 0) {\n        Communicator.getAllRoutes().then(newRoutesData => {\n            console.log(`App#onMount  got routes, set them as routesData...`);\n            routesData = newRoutesData;\n        });\n    }\n}));\n</script>\n\n<style>\n  :global(:root){\n    --primary-color: #A5A1E0;\n    --secondary-color-a: #E0CEAD;\n    --secondary-color-b: #8B945C;\n    --tertiary-color-a: #948A79;\n    --tertiary-color-b: #D5E096;\n    --light-primary:rgb(237,236,249);\n    --background-color-dark: rgb(235,241,244);\n    --background-color-light: rgb(255,255,255);\n    --light-grey: rgb(135,152,173);\n    --dark-grey: rgb(46,56,77);\n    --display-font: 'Permanent Marker', cursive;\n    --sans-serif-font: 'Poppins', sans-serif;\n    --serif-font: 'Crete Round', serif;\n  }\n\n  header {\n    background-color: var(--background-color-dark);\n    color: var(--primary-color);\n    font-family: var(--display-font);\n    text-transform: uppercase;\n    font-size: 12vw;\n    text-align: center;\n    margin: 0;\n  }\n\n  .root {\n    font-family: var(--sans-serif-font);\n    font-weight: 300;\n    height: 100vh;\n    width: 100vw;\n    display: grid;\n    grid-template-rows: 1fr 10fr\n  }\n\n  main {\n    display: grid;\n    place-items: center;\n    background-color: var(--background-color-dark);\n  }\n\n  main section {\n    height: 100%;\n    width: 80%;\n    border-radius: 0.15em;\n    color: var(--dark-grey);\n    background-color: var(--background-color-light);\n  }\n</style>\n\n<div class=\"root\">\n  <header>\n    Feasy Berries\n  </header>\n  <main>\n    <section>\n      {#if routeIsSelected && selectedRouteParser }\n        <RouteViewer bind:selectedRouteParser on:backButton={onBackButton}/>\n      {:else}\n        <RouteSelector\n          bind:routesData\n          bind:origin\n          bind:destination\n          on:backButton={onBackButton}\n        />\n      {/if}\n    </section>\n  </main>\n</div>",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\nconst dispatchEvent = createEventDispatcher();\nconst backButton = (_e) => {\n    dispatchEvent('backButton');\n};\n</script>\n\n<style>\n  button {\n    margin: 0\n  }\n</style>\n\n<button class=\"backButton\" on:click={backButton}>{`<`}</button>\n",
    "<script lang=\"ts\">;\nexport let departure;\n// departure = {\n//   time: number,\n//   status: {\n//     percentAvailable: number\n//   },\n//   ferry: {\n//     name: string,\n//     url: string\n//   },\n//   deckSpace: {\n//     total: number,\n//     standard: number,\n//     mixed: number\n//   }\n// }\nconst formatTime = (time) => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n    });\n};\n</script>\n\n<style>\n  li {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 4em;\n  }\n\n</style>\n\n<li>\n  <span class=\"depatureTime\">{formatTime(departure.time)}</span>\n  <span class=\"ferry\" data-url={departure.ferry.url}>\n    {departure.ferry.name}\n  </span>\n  <span\n    class=\"deckSpace\"\n    data-standard-available={departure.deckSpace?.standard}\n    data-mixed-available={departure.deckSpace?.mixed}\n  >\n    {departure.deckSpace.total}%\n  </span>\n</li>",
    "<script lang=\"ts\">;\nexport let departure;\n// departure = {time: number, status: {time: number, status: string}}\nconst { time: departureTime, status: statusObj } = departure;\nconst { time: arrivalTime, status: statusStr } = statusObj;\nconst arrived = (statusStr === null || statusStr === void 0 ? void 0 : statusStr.toUpperCase()) === \"ARRIVED\";\nconst nowStr = new Date().toLocaleString(\"en-US\", { timeZone: \"America/Vancouver\" });\nconst now = new Date(nowStr).getTime();\nconst percentComplete = (now - departureTime) / (arrivalTime - departureTime) * 100;\nconsole.log(`departureTime:${departureTime}, now:${now}, arrivalTime:${arrivalTime}, percentComplete:${percentComplete}`);\nconst formatTime = (time) => {\n    const date = new Date(time);\n    return date.toLocaleTimeString('en', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n    });\n};\n</script>\n\n<style>\n  li {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: 4em;\n  }\n</style>\n\n<li>\n    <span class=\"start\">{formatTime(departureTime)}</span>\n    {#if arrived}\n      <span class=\"percentComplete\">100</span>\n    {:else}\n      <span class=\"percentComplete\">{Math.round(percentComplete)}%</span>\n    {/if}\n    <span class=\"end\">{formatTime(arrivalTime)}</span>\n</li>\n\n",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\n;\nconst dispatchEvent = createEventDispatcher();\nconst portSelected = (selectedPort) => {\n    dispatchEvent('portSelected', selectedPort);\n};\nexport let port;\nconst splitIndex = port.name.indexOf('(');\nconst portTown = port.name.slice(0, splitIndex - 1);\nconst portName = port.name.slice(splitIndex + 1, -1);\nconst iconRight = {\n    'LNG': false,\n    'HSB': true,\n    'NAN': false,\n    'DUK': false,\n    'TSA': true,\n    'SWB': false\n};\n</script>\n\n<style>\n  li {\n    display:flex;\n    color: var(--primary-color);\n    background-color: var(--light-primary);\n    border-radius: 10px;\n    height: 4em;\n    margin: 0.5em;\n    align-items: center;\n  }\n  li.reversed {\n    flex-direction: row-reverse;\n  }\n  .portCodeIcon {\n    height: 2.5em;\n    width: 2.5em;\n    place-items: center;\n    display: grid;\n    background-color: var(--background-color-light);\n    border-radius: 50%;\n    border: 0.3em solid var(--primary-color);\n    padding: 0.5em;\n  }\n  .portCode {\n    color: var(--dark-grey);\n    font-weight: 600;\n    transform: scaleY(2.5);\n  }\n  .portDetails {\n    margin-left: 1em;\n    margin-right: 1em;\n    display: flex;\n    flex-direction: column;\n  }\n  .portName {\n    font-family: var(--serif-font);\n    font-size: 1.5em;\n  }\n  .portTown {\n    font-size: 0.75em;\n  }\n</style>\n\n<li\n  on:click={ _ => portSelected(port) }\n  class:reversed=\"{iconRight[port.code]}\"\n>\n  <div class='portCodeIcon'>\n    <span class='portCode'>{port.code}</span>\n  </div>\n  <div class='portDetails'>\n    <span class='portName'>{portName}</span>\n    <span class='portTown'>{portTown}</span>\n  </div>\n</li>\n",
    "<script lang=\"ts\">import BackButton from \"./BackButton.svelte\";\nimport PortMapView from \"./PortMapView.svelte\";\n;\nexport let routesData;\nexport let origin;\nexport let destination;\nconst portsSort = ['LNG', 'HSB', 'NAN', 'DUK', 'TSA', 'SWB'];\nlet sortedPorts = [];\n$: {\n    if (routesData.length > 0) {\n        sortedPorts = routesData.sort((a, b) => portsSort.indexOf(a.code) - portsSort.indexOf(b.code));\n    }\n}\nif (routesData.length > 0) {\n}\nelse {\n    sortedPorts.length = 0;\n}\nconsole.log('dafuq these ports ', sortedPorts);\nconst objectIsEmpty = (obj) => {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nconst originSelected = event => {\n    console.log('RouteSelector# setting a new origin port:', event.detail);\n    origin = event.detail;\n};\nconst destinationSelected = event => { destination = event.detail; };\n</script>\n\n<style>\n  .routeSelector {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  header {\n    font-size: calc(100% + 8vw);\n    text-align: center;\n    font-family: var(--display-font);\n  }\n\n  ul {\n    display: grid;\n    align-content: end;\n    height: 100%;\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    background-image: url(\"/map.png\");\n    background-size: auto 100%;\n    background-position: center center;\n  }\n</style>\n\n<section class=\"routeSelector\">\n  {#if objectIsEmpty(origin)}\n    <header>Origin?</header>\n    <ul>\n      {#each sortedPorts as port}\n        <PortMapView {port} on:portSelected={originSelected}/>\n      {/each}\n    </ul>\n  {:else}\n    <header>Destination?</header>\n    <BackButton on:backButton />\n    <ul>\n      {#each origin.destinationRoutes as port}\n        <PortMapView {port} on:portSelected={destinationSelected} />\n      {/each}\n    </ul>\n  {/if}\n</section>",
    "<script lang=\"ts\">import BackButton from \"./BackButton.svelte\";\nimport PastDepatureListView from \"./PastDepatureListView.svelte\";\nimport FutureDepartureListView from \"./FutureDepatureListView.svelte\";\n;\nexport let selectedRouteParser;\nlet departures;\n$: {\n    if (typeof (selectedRouteParser.departures) === 'function') {\n        departures = selectedRouteParser.departures();\n    }\n}\n</script>\n\n<style>\n  .routeViewer {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  header {\n    font-size: calc(100% + 8vw);\n    text-align: center;\n    font-family: var(--display-font);\n  }\n  .routes {\n    height: 100%;\n    background-image: url(\"/map.png\");\n    background-size: auto 100%;\n    background-position: center center;\n  }\n</style>\n\n<section class=\"routeViewer\">\n  <header>When?</header>\n  {#if selectedRouteParser && departures }\n    <BackButton on:backButton />\n    <section class=\"routes\">\n      <ul class=\"pastDepartures\">\n        {#each departures.past as pastDeparture}\n          <PastDepatureListView departure={pastDeparture} />\n        {/each}\n      </ul>\n      <hr>\n      <ul class=\"futureDepartures\">\n        {#each departures.future as futureDeparture}\n          <FutureDepartureListView departure={futureDeparture} />\n        {/each}\n      </ul>\n    </section>\n  {:else}\n    Awaiting Route data...\n  {/if}\n</section>"
  ],
  "names": [],
  "mappings": "AA8DU,KAAK,AAAC,CAAC,AACb,eAAe,CAAE,OAAO,CACxB,mBAAmB,CAAE,OAAO,CAC5B,mBAAmB,CAAE,OAAO,CAC5B,kBAAkB,CAAE,OAAO,CAC3B,kBAAkB,CAAE,OAAO,CAC3B,gBAAgB,gBAAgB,CAChC,uBAAuB,CAAE,gBAAgB,CACzC,wBAAwB,CAAE,gBAAgB,CAC1C,YAAY,CAAE,gBAAgB,CAC9B,WAAW,CAAE,aAAa,CAC1B,cAAc,CAAE,2BAA2B,CAC3C,iBAAiB,CAAE,qBAAqB,CACxC,YAAY,CAAE,oBAAoB,AACpC,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,uBAAuB,CAAC,CAC9C,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,WAAW,CAAE,IAAI,cAAc,CAAC,CAChC,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,AACX,CAAC,AAED,KAAK,8BAAC,CAAC,AACL,WAAW,CAAE,IAAI,iBAAiB,CAAC,CACnC,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,GAAG,CAAC,IAAI;EAC9B,CAAC,AAED,IAAI,8BAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,IAAI,uBAAuB,CAAC,AAChD,CAAC,AAED,mBAAI,CAAC,OAAO,eAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,MAAM,CACrB,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,gBAAgB,CAAE,IAAI,wBAAwB,CAAC,AACjD,CAAC;ACrGD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,CAAC;EACX,CAAC;ACkBD,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,GAAG,AACb,CAAC;ACbD,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,eAAe,CAAE,aAAa,CAC9B,MAAM,CAAE,GAAG,AACb,CAAC;ACLD,EAAE,cAAC,CAAC,AACF,QAAQ,IAAI,CACZ,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,gBAAgB,CAAE,IAAI,eAAe,CAAC,CACtC,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,KAAK,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,EAAE,SAAS,cAAC,CAAC,AACX,cAAc,CAAE,WAAW,AAC7B,CAAC,AACD,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,IAAI,wBAAwB,CAAC,CAC/C,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,eAAe,CAAC,CACxC,OAAO,CAAE,KAAK,AAChB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,WAAW,CAAC,CACvB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,OAAO,GAAG,CAAC,AACxB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,GAAG,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,WAAW,CAAE,IAAI,YAAY,CAAC,CAC9B,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,SAAS,cAAC,CAAC,AACT,SAAS,CAAE,MAAM,AACnB,CAAC;AC9BD,cAAc,cAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAC3B,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,cAAc,CAAC,AAClC,CAAC,AAED,EAAE,cAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,UAAU,CAAC,CACjC,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,mBAAmB,CAAE,MAAM,CAAC,MAAM,AACpC,CAAC;ACvCD,YAAY,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC,AAED,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAC3B,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IAAI,cAAc,CAAC,AAClC,CAAC,AACD,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,UAAU,CAAC,CACjC,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,mBAAmB,CAAE,MAAM,CAAC,MAAM,AACpC,CAAC"
}